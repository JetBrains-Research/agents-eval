id,full_name,owner,name,logs,url,problems,problems_count,problems_by_name_count,open_status,error
1,AdamBien/aws-lambda-cdk-plain,AdamBien,aws-lambda-cdk-plain,"✓  Linked qodana.cloud project: agents-eval
By using this Docker image, you agree to
- JetBrains Privacy Policy (https://jb.gg/jetbrains-privacy-policy)
- Qodana Linters Agreement (https://www.jetbrains.com/legal/docs/agreements/qodana/license/)
Licensed to JetBrains Team
Subscription is active until June 30, 2025.
Qodana license plan: Ultimate Plus
                                        
          _              _       
         /\ \           /\ \        Qodana for JVM 2024.1
        /  \ \         /  \ \       Documentation
       / /\ \ \       / /\ \ \      https://jb.gg/qodana-docs
      / / /\ \ \     / / /\ \ \     Contact us at
     / / /  \ \_\   / / /  \ \_\    qodana-support@jetbrains.com
    / / / _ / / /  / / /   / / /    Or via our issue tracker
   / / / /\ \/ /  / / /   / / /     https://jb.gg/qodana-issue
  / / /__\ \ \/  / / /___/ / /      Or share your feedback at our forum
 / / /____\ \ \ / / /____\/ /       https://jb.gg/qodana-forum
 \/________\_\/ \/_________/     
                                                   
                                        
Starting up Qodana for JVM 2024.1 (build QDJVM-241.17569.155)…done.
✗  Qodana exited with code 1

!  Check ./logs/ in the results directory for more information
",,,,,False,"2024-07-10 13:02:38,075 [   3109] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Parent job is Cancelling
kotlinx.coroutines.JobCancellationException: Parent job is Cancelling; job=UndispatchedCoroutine{Cancelling}@d5b031e
Caused by: com.intellij.diagnostic.PluginException: VFS can't be initialized (3 attempts failed) [Plugin: com.intellij]
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:53)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance(ServiceInstanceInitializer.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invokeSuspend(LazyInstanceHolder.kt:162)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invokeSuspend(LazyInstanceHolder.kt:160)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startCoroutineUndispatched(Undispatched.kt:44)
	at kotlinx.coroutines.CoroutineStart.invoke(CoroutineStart.kt:112)
	at kotlinx.coroutines.AbstractCoroutine.start(AbstractCoroutine.kt:126)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.launch(Builders.common.kt:56)
	at kotlinx.coroutines.BuildersKt.launch(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.initialize(LazyInstanceHolder.kt:145)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.access$initialize(LazyInstanceHolder.kt:13)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.tryInitialize(LazyInstanceHolder.kt:135)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt:95)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance$suspendImpl(LazyInstanceHolder.kt:83)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.InstanceContainerImpl.instance(InstanceContainerImpl.kt:68)
	at com.intellij.serviceContainer.ComponentManagerImpl.getServiceAsync(ComponentManagerImpl.kt:702)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invokeSuspend(appServicePreloading.kt:180)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span(tracer.kt:56)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span$default(tracer.kt:49)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1.invokeSuspend(appServicePreloading.kt:41)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
Caused by: java.lang.RuntimeException: VFS can't be initialized (3 attempts failed)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:105)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.connect(PersistentFSConnector.java:61)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecordsImpl.connect(FSRecordsImpl.java:286)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:119)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:99)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.doConnect(PersistentFSImpl.java:223)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.connect(PersistentFSImpl.java:184)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.<init>(PersistentFSImpl.java:160)
	at java.base/java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:732)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:49)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:42)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:308)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:42)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:31)
	... 38 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
2024-07-10 13:02:38,086 [   3120] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:02:38,087 [   3121] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:02:38,087 [   3121] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - OS: Linux
2024-07-10 13:02:38,088 [   3122] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Last Action: 
kotlinx.coroutines.JobCancellationException: Parent job is Cancelling; job=UndispatchedCoroutine{Cancelling}@d5b031e
Caused by: com.intellij.diagnostic.PluginException: VFS can't be initialized (3 attempts failed) [Plugin: com.intellij]
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:53)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance(ServiceInstanceInitializer.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invokeSuspend(LazyInstanceHolder.kt:162)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invokeSuspend(LazyInstanceHolder.kt:160)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startCoroutineUndispatched(Undispatched.kt:44)
	at kotlinx.coroutines.CoroutineStart.invoke(CoroutineStart.kt:112)
	at kotlinx.coroutines.AbstractCoroutine.start(AbstractCoroutine.kt:126)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.launch(Builders.common.kt:56)
	at kotlinx.coroutines.BuildersKt.launch(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.initialize(LazyInstanceHolder.kt:145)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.access$initialize(LazyInstanceHolder.kt:13)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.tryInitialize(LazyInstanceHolder.kt:135)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt:95)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance$suspendImpl(LazyInstanceHolder.kt:83)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.InstanceContainerImpl.instance(InstanceContainerImpl.kt:68)
	at com.intellij.serviceContainer.ComponentManagerImpl.getServiceAsync(ComponentManagerImpl.kt:702)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invokeSuspend(appServicePreloading.kt:180)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span(tracer.kt:56)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span$default(tracer.kt:49)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1.invokeSuspend(appServicePreloading.kt:41)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
Caused by: java.lang.RuntimeException: VFS can't be initialized (3 attempts failed)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:105)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.connect(PersistentFSConnector.java:61)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecordsImpl.connect(FSRecordsImpl.java:286)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:119)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:99)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.doConnect(PersistentFSImpl.java:223)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.connect(PersistentFSImpl.java:184)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.<init>(PersistentFSImpl.java:160)
	at java.base/java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:732)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:49)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:42)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:308)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:42)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:31)
	... 38 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more

"
35,binxio/cfn-lint-plugin,binxio,cfn-lint-plugin,"✓  Linked qodana.cloud project: agents-eval
By using this Docker image, you agree to
- JetBrains Privacy Policy (https://jb.gg/jetbrains-privacy-policy)
- Qodana Linters Agreement (https://www.jetbrains.com/legal/docs/agreements/qodana/license/)
Licensed to JetBrains Team
Subscription is active until June 30, 2025.
Qodana license plan: Ultimate Plus
                                        
          _              _       
         /\ \           /\ \        Qodana for JVM 2024.1
        /  \ \         /  \ \       Documentation
       / /\ \ \       / /\ \ \      https://jb.gg/qodana-docs
      / / /\ \ \     / / /\ \ \     Contact us at
     / / /  \ \_\   / / /  \ \_\    qodana-support@jetbrains.com
    / / / _ / / /  / / /   / / /    Or via our issue tracker
   / / / /\ \/ /  / / /   / / /     https://jb.gg/qodana-issue
  / / /__\ \ \/  / / /___/ / /      Or share your feedback at our forum
 / / /____\ \ \ / / /____\/ /       https://jb.gg/qodana-forum
 \/________\_\/ \/_________/     
                                                   
                                        
Starting up Qodana for JVM 2024.1 (build QDJVM-241.17569.155)…done.
Preparing for the Project opening stage ...
The Project opening stage completed in 1s
✗  Qodana exited with code 1

!  Check ./logs/ in the results directory for more information
",,,,,False,"2024-07-10 13:02:40,809 [   1273] SEVERE - #c.i.i.s.e.v.s.p.EventLogMetadataPersistence - No space left on device
java.io.IOException: No space left on device
	at java.base/sun.nio.ch.FileDispatcherImpl.write0(Native Method)
	at java.base/sun.nio.ch.FileDispatcherImpl.write(FileDispatcherImpl.java:62)
	at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:132)
	at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
	at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:288)
	at java.base/java.nio.channels.Channels.writeFullyImpl(Channels.java:74)
	at java.base/java.nio.channels.Channels.writeFully(Channels.java:96)
	at java.base/java.nio.channels.Channels$1.write(Channels.java:171)
	at java.base/java.nio.file.Files.write(Files.java:3517)
	at java.base/java.nio.file.Files.writeString(Files.java:3734)
	at java.base/java.nio.file.Files.writeString(Files.java:3674)
	at com.intellij.internal.statistic.eventLog.validator.storage.persistence.EventLogMetadataPersistence.cacheEventsScheme(EventLogMetadataPersistence.java:59)
	at com.intellij.internal.statistic.eventLog.validator.storage.ValidationRulesPersistedStorage.update(ValidationRulesPersistedStorage.java:113)
	at com.intellij.internal.statistic.eventLog.validator.IntellijSensitiveDataValidator.update(IntellijSensitiveDataValidator.java:162)
	at com.intellij.internal.statistic.updater.StatisticsJobsSchedulerKt$updateValidationRules$2.invoke(StatisticsJobsScheduler.kt:122)
	at com.intellij.internal.statistic.updater.StatisticsJobsSchedulerKt$updateValidationRules$2.invoke(StatisticsJobsScheduler.kt:121)
	at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
	at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
	at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
	at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
	at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
	at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
	at com.intellij.internal.statistic.updater.StatisticsJobsSchedulerKt.updateValidationRules(StatisticsJobsScheduler.kt:121)
	at org.jetbrains.qodana.staticAnalysis.inspections.runner.QodanaInspectionApplication$waitForStatisticsSchemaUpdate$2.invokeSuspend(QodanaInspectionApplication.kt:136)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
2024-07-10 13:02:40,811 [   1275] SEVERE - #c.i.i.s.e.v.s.p.EventLogMetadataPersistence - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:02:40,812 [   1276] SEVERE - #c.i.i.s.e.v.s.p.EventLogMetadataPersistence - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:02:40,815 [   1279] SEVERE - #c.i.i.s.e.v.s.p.EventLogMetadataPersistence - OS: Linux
2024-07-10 13:02:40,816 [   1280] SEVERE - #c.i.i.s.e.v.s.p.EventLogMetadataPersistence - Last Action: 
2024-07-10 13:02:42,148 [   2612] SEVERE - #c.i.o.u.KeyedExtensionCollector - VFS can't be initialized (3 attempts failed) [Plugin: com.intellij]
com.intellij.diagnostic.PluginException: VFS can't be initialized (3 attempts failed) [Plugin: com.intellij]
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:53)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance(ServiceInstanceInitializer.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invokeSuspend(LazyInstanceHolder.kt:162)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invokeSuspend(LazyInstanceHolder.kt:160)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startCoroutineUndispatched(Undispatched.kt:44)
	at kotlinx.coroutines.CoroutineStart.invoke(CoroutineStart.kt:112)
	at kotlinx.coroutines.AbstractCoroutine.start(AbstractCoroutine.kt:126)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.launch(Builders.common.kt:56)
	at kotlinx.coroutines.BuildersKt.launch(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.initialize(LazyInstanceHolder.kt:145)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.access$initialize(LazyInstanceHolder.kt:13)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.tryInitialize(LazyInstanceHolder.kt:135)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt:95)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance$suspendImpl(LazyInstanceHolder.kt:83)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.InstanceContainerImpl.instance(InstanceContainerImpl.kt:68)
	at com.intellij.serviceContainer.ComponentManagerImpl.getServiceAsync(ComponentManagerImpl.kt:702)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invokeSuspend(appServicePreloading.kt:180)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span(tracer.kt:56)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span$default(tracer.kt:49)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1.invokeSuspend(appServicePreloading.kt:41)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
Caused by: java.lang.RuntimeException: VFS can't be initialized (3 attempts failed)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:105)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.connect(PersistentFSConnector.java:61)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecordsImpl.connect(FSRecordsImpl.java:286)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:119)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:99)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.doConnect(PersistentFSImpl.java:223)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.connect(PersistentFSImpl.java:184)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.<init>(PersistentFSImpl.java:160)
	at java.base/java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:732)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:49)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:42)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:308)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:42)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:31)
	... 38 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
2024-07-10 13:02:42,155 [   2619] SEVERE - #c.i.o.u.KeyedExtensionCollector - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:02:42,155 [   2619] SEVERE - #c.i.o.u.KeyedExtensionCollector - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:02:42,156 [   2620] SEVERE - #c.i.o.u.KeyedExtensionCollector - OS: Linux
2024-07-10 13:02:42,156 [   2620] SEVERE - #c.i.o.u.KeyedExtensionCollector - Last Action: 
2024-07-10 13:02:42,165 [   2629] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
java.lang.IllegalStateException: @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
	at com.intellij.openapi.vfs.LocalFileSystem.$$$reportNull$$$0(LocalFileSystem.java)
	at com.intellij.openapi.vfs.LocalFileSystem.getInstance(LocalFileSystem.java:37)
	at org.jetbrains.qodana.staticAnalysis.inspections.runner.startup.QodanaProjectLoader$doOpen$vfsProject$1.invokeSuspend(QodanaProjectLoader.kt:58)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
	at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
2024-07-10 13:02:42,166 [   2630] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:02:42,166 [   2630] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:02:42,166 [   2630] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - OS: Linux
2024-07-10 13:02:42,167 [   2631] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Last Action: 
java.lang.IllegalStateException: @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
	at com.intellij.openapi.vfs.LocalFileSystem.$$$reportNull$$$0(LocalFileSystem.java)
	at com.intellij.openapi.vfs.LocalFileSystem.getInstance(LocalFileSystem.java:37)
	at org.jetbrains.qodana.staticAnalysis.inspections.runner.startup.QodanaProjectLoader$doOpen$vfsProject$1.invokeSuspend(QodanaProjectLoader.kt:58)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
	at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)

"
45,ChristianAA/selenium-springboot-example,ChristianAA,selenium-springboot-example,"✓  Linked qodana.cloud project: agents-eval
By using this Docker image, you agree to
- JetBrains Privacy Policy (https://jb.gg/jetbrains-privacy-policy)
- Qodana Linters Agreement (https://www.jetbrains.com/legal/docs/agreements/qodana/license/)
Licensed to JetBrains Team
Subscription is active until June 30, 2025.
Qodana license plan: Ultimate Plus
                                        
          _              _       
         /\ \           /\ \        Qodana for JVM 2024.1
        /  \ \         /  \ \       Documentation
       / /\ \ \       / /\ \ \      https://jb.gg/qodana-docs
      / / /\ \ \     / / /\ \ \     Contact us at
     / / /  \ \_\   / / /  \ \_\    qodana-support@jetbrains.com
    / / / _ / / /  / / /   / / /    Or via our issue tracker
   / / / /\ \/ /  / / /   / / /     https://jb.gg/qodana-issue
  / / /__\ \ \/  / / /___/ / /      Or share your feedback at our forum
 / / /____\ \ \ / / /____\/ /       https://jb.gg/qodana-forum
 \/________\_\/ \/_________/     
                                                   
                                        
Starting up Qodana for JVM 2024.1 (build QDJVM-241.17569.155)…done.
Preparing for the Project opening stage ...
The Project opening stage completed in 1s
✗  Qodana exited with code 1

!  Check ./logs/ in the results directory for more information
",,,,,False,"2024-07-10 13:02:46,134 [   2680] SEVERE - #c.i.o.u.KeyedExtensionCollector - VFS can't be initialized (3 attempts failed) [Plugin: com.intellij]
com.intellij.diagnostic.PluginException: VFS can't be initialized (3 attempts failed) [Plugin: com.intellij]
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:53)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance(ServiceInstanceInitializer.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invokeSuspend(LazyInstanceHolder.kt:162)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invokeSuspend(LazyInstanceHolder.kt:160)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startCoroutineUndispatched(Undispatched.kt:44)
	at kotlinx.coroutines.CoroutineStart.invoke(CoroutineStart.kt:112)
	at kotlinx.coroutines.AbstractCoroutine.start(AbstractCoroutine.kt:126)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.launch(Builders.common.kt:56)
	at kotlinx.coroutines.BuildersKt.launch(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.initialize(LazyInstanceHolder.kt:145)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.access$initialize(LazyInstanceHolder.kt:13)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.tryInitialize(LazyInstanceHolder.kt:135)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt:95)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance$suspendImpl(LazyInstanceHolder.kt:83)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.InstanceContainerImpl.instance(InstanceContainerImpl.kt:68)
	at com.intellij.serviceContainer.ComponentManagerImpl.getServiceAsync(ComponentManagerImpl.kt:702)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invokeSuspend(appServicePreloading.kt:180)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span(tracer.kt:56)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span$default(tracer.kt:49)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1.invokeSuspend(appServicePreloading.kt:41)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
Caused by: java.lang.RuntimeException: VFS can't be initialized (3 attempts failed)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:105)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.connect(PersistentFSConnector.java:61)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecordsImpl.connect(FSRecordsImpl.java:286)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:119)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:99)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.doConnect(PersistentFSImpl.java:223)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.connect(PersistentFSImpl.java:184)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.<init>(PersistentFSImpl.java:160)
	at java.base/java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:732)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:49)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:42)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:308)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:42)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:31)
	... 38 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
2024-07-10 13:02:46,144 [   2690] SEVERE - #c.i.o.u.KeyedExtensionCollector - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:02:46,145 [   2691] SEVERE - #c.i.o.u.KeyedExtensionCollector - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:02:46,145 [   2691] SEVERE - #c.i.o.u.KeyedExtensionCollector - OS: Linux
2024-07-10 13:02:46,146 [   2692] SEVERE - #c.i.o.u.KeyedExtensionCollector - Last Action: 
2024-07-10 13:02:46,158 [   2704] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
java.lang.IllegalStateException: @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
	at com.intellij.openapi.vfs.LocalFileSystem.$$$reportNull$$$0(LocalFileSystem.java)
	at com.intellij.openapi.vfs.LocalFileSystem.getInstance(LocalFileSystem.java:37)
	at org.jetbrains.qodana.staticAnalysis.inspections.runner.startup.QodanaProjectLoader$doOpen$vfsProject$1.invokeSuspend(QodanaProjectLoader.kt:58)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
	at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
2024-07-10 13:02:46,158 [   2704] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:02:46,159 [   2705] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:02:46,159 [   2705] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - OS: Linux
2024-07-10 13:02:46,159 [   2705] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Last Action: 
java.lang.IllegalStateException: @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
	at com.intellij.openapi.vfs.LocalFileSystem.$$$reportNull$$$0(LocalFileSystem.java)
	at com.intellij.openapi.vfs.LocalFileSystem.getInstance(LocalFileSystem.java:37)
	at org.jetbrains.qodana.staticAnalysis.inspections.runner.startup.QodanaProjectLoader$doOpen$vfsProject$1.invokeSuspend(QodanaProjectLoader.kt:58)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
	at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)

"
57,dadoonet/elasticsearch-java-client-demo,dadoonet,elasticsearch-java-client-demo,"✓  Linked qodana.cloud project: agents-eval
By using this Docker image, you agree to
- JetBrains Privacy Policy (https://jb.gg/jetbrains-privacy-policy)
- Qodana Linters Agreement (https://www.jetbrains.com/legal/docs/agreements/qodana/license/)
Licensed to JetBrains Team
Subscription is active until June 30, 2025.
Qodana license plan: Ultimate Plus
                                        
          _              _       
         /\ \           /\ \        Qodana for JVM 2024.1
        /  \ \         /  \ \       Documentation
       / /\ \ \       / /\ \ \      https://jb.gg/qodana-docs
      / / /\ \ \     / / /\ \ \     Contact us at
     / / /  \ \_\   / / /  \ \_\    qodana-support@jetbrains.com
    / / / _ / / /  / / /   / / /    Or via our issue tracker
   / / / /\ \/ /  / / /   / / /     https://jb.gg/qodana-issue
  / / /__\ \ \/  / / /___/ / /      Or share your feedback at our forum
 / / /____\ \ \ / / /____\/ /       https://jb.gg/qodana-forum
 \/________\_\/ \/_________/     
                                                   
                                        
Starting up Qodana for JVM 2024.1 (build QDJVM-241.17569.155)…done.
Preparing for the Project opening stage ...
The Project opening stage completed in 1s
✗  Qodana exited with code 1

!  Check ./logs/ in the results directory for more information
",,,,,False,"2024-07-10 13:02:50,120 [   2534] SEVERE - #c.i.o.u.KeyedExtensionCollector - VFS can't be initialized (3 attempts failed) [Plugin: com.intellij]
com.intellij.diagnostic.PluginException: VFS can't be initialized (3 attempts failed) [Plugin: com.intellij]
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:53)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance(ServiceInstanceInitializer.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invokeSuspend(LazyInstanceHolder.kt:162)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invokeSuspend(LazyInstanceHolder.kt:160)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startCoroutineUndispatched(Undispatched.kt:44)
	at kotlinx.coroutines.CoroutineStart.invoke(CoroutineStart.kt:112)
	at kotlinx.coroutines.AbstractCoroutine.start(AbstractCoroutine.kt:126)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.launch(Builders.common.kt:56)
	at kotlinx.coroutines.BuildersKt.launch(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.initialize(LazyInstanceHolder.kt:145)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.access$initialize(LazyInstanceHolder.kt:13)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.tryInitialize(LazyInstanceHolder.kt:135)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt:95)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance$suspendImpl(LazyInstanceHolder.kt:83)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.InstanceContainerImpl.instance(InstanceContainerImpl.kt:68)
	at com.intellij.serviceContainer.ComponentManagerImpl.getServiceAsync(ComponentManagerImpl.kt:702)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invokeSuspend(appServicePreloading.kt:180)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span(tracer.kt:56)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span$default(tracer.kt:49)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1.invokeSuspend(appServicePreloading.kt:41)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
Caused by: java.lang.RuntimeException: VFS can't be initialized (3 attempts failed)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:105)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.connect(PersistentFSConnector.java:61)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecordsImpl.connect(FSRecordsImpl.java:286)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:119)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:99)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.doConnect(PersistentFSImpl.java:223)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.connect(PersistentFSImpl.java:184)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.<init>(PersistentFSImpl.java:160)
	at java.base/java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:732)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:49)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:42)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:308)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:42)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:31)
	... 38 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
2024-07-10 13:02:50,129 [   2543] SEVERE - #c.i.o.u.KeyedExtensionCollector - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:02:50,129 [   2543] SEVERE - #c.i.o.u.KeyedExtensionCollector - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:02:50,130 [   2544] SEVERE - #c.i.o.u.KeyedExtensionCollector - OS: Linux
2024-07-10 13:02:50,130 [   2544] SEVERE - #c.i.o.u.KeyedExtensionCollector - Last Action: 
2024-07-10 13:02:50,143 [   2557] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
java.lang.IllegalStateException: @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
	at com.intellij.openapi.vfs.LocalFileSystem.$$$reportNull$$$0(LocalFileSystem.java)
	at com.intellij.openapi.vfs.LocalFileSystem.getInstance(LocalFileSystem.java:37)
	at org.jetbrains.qodana.staticAnalysis.inspections.runner.startup.QodanaProjectLoader$doOpen$vfsProject$1.invokeSuspend(QodanaProjectLoader.kt:58)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
	at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
2024-07-10 13:02:50,143 [   2557] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:02:50,144 [   2558] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:02:50,144 [   2558] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - OS: Linux
2024-07-10 13:02:50,144 [   2558] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Last Action: 
java.lang.IllegalStateException: @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
	at com.intellij.openapi.vfs.LocalFileSystem.$$$reportNull$$$0(LocalFileSystem.java)
	at com.intellij.openapi.vfs.LocalFileSystem.getInstance(LocalFileSystem.java:37)
	at org.jetbrains.qodana.staticAnalysis.inspections.runner.startup.QodanaProjectLoader$doOpen$vfsProject$1.invokeSuspend(QodanaProjectLoader.kt:58)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
	at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)

"
77,Esri/java-maven-starter-project,Esri,java-maven-starter-project,"✓  Linked qodana.cloud project: agents-eval
By using this Docker image, you agree to
- JetBrains Privacy Policy (https://jb.gg/jetbrains-privacy-policy)
- Qodana Linters Agreement (https://www.jetbrains.com/legal/docs/agreements/qodana/license/)
Licensed to JetBrains Team
Subscription is active until June 30, 2025.
Qodana license plan: Ultimate Plus
                                        
          _              _       
         /\ \           /\ \        Qodana for JVM 2024.1
        /  \ \         /  \ \       Documentation
       / /\ \ \       / /\ \ \      https://jb.gg/qodana-docs
      / / /\ \ \     / / /\ \ \     Contact us at
     / / /  \ \_\   / / /  \ \_\    qodana-support@jetbrains.com
    / / / _ / / /  / / /   / / /    Or via our issue tracker
   / / / /\ \/ /  / / /   / / /     https://jb.gg/qodana-issue
  / / /__\ \ \/  / / /___/ / /      Or share your feedback at our forum
 / / /____\ \ \ / / /____\/ /       https://jb.gg/qodana-forum
 \/________\_\/ \/_________/     
                                                   
                                        
Starting up Qodana for JVM 2024.1 (build QDJVM-241.17569.155)…done.
Preparing for the Project opening stage ...
The Project opening stage completed in 1s
✗  Qodana exited with code 1

!  Check ./logs/ in the results directory for more information
",,,,,False,"2024-07-10 13:02:54,138 [   2565] SEVERE - #c.i.o.u.KeyedExtensionCollector - VFS can't be initialized (3 attempts failed) [Plugin: com.intellij]
com.intellij.diagnostic.PluginException: VFS can't be initialized (3 attempts failed) [Plugin: com.intellij]
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:53)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance(ServiceInstanceInitializer.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invokeSuspend(LazyInstanceHolder.kt:162)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invokeSuspend(LazyInstanceHolder.kt:160)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startCoroutineUndispatched(Undispatched.kt:44)
	at kotlinx.coroutines.CoroutineStart.invoke(CoroutineStart.kt:112)
	at kotlinx.coroutines.AbstractCoroutine.start(AbstractCoroutine.kt:126)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.launch(Builders.common.kt:56)
	at kotlinx.coroutines.BuildersKt.launch(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.initialize(LazyInstanceHolder.kt:145)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.access$initialize(LazyInstanceHolder.kt:13)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.tryInitialize(LazyInstanceHolder.kt:135)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt:95)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance$suspendImpl(LazyInstanceHolder.kt:83)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.InstanceContainerImpl.instance(InstanceContainerImpl.kt:68)
	at com.intellij.serviceContainer.ComponentManagerImpl.getServiceAsync(ComponentManagerImpl.kt:702)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invokeSuspend(appServicePreloading.kt:180)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span(tracer.kt:56)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span$default(tracer.kt:49)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1.invokeSuspend(appServicePreloading.kt:41)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
Caused by: java.lang.RuntimeException: VFS can't be initialized (3 attempts failed)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:105)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.connect(PersistentFSConnector.java:61)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecordsImpl.connect(FSRecordsImpl.java:286)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:119)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:99)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.doConnect(PersistentFSImpl.java:223)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.connect(PersistentFSImpl.java:184)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.<init>(PersistentFSImpl.java:160)
	at java.base/java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:732)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:49)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:42)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:308)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:42)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:31)
	... 38 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
2024-07-10 13:02:54,149 [   2576] SEVERE - #c.i.o.u.KeyedExtensionCollector - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:02:54,149 [   2576] SEVERE - #c.i.o.u.KeyedExtensionCollector - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:02:54,150 [   2577] SEVERE - #c.i.o.u.KeyedExtensionCollector - OS: Linux
2024-07-10 13:02:54,150 [   2577] SEVERE - #c.i.o.u.KeyedExtensionCollector - Last Action: 
2024-07-10 13:02:54,162 [   2589] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
java.lang.IllegalStateException: @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
	at com.intellij.openapi.vfs.LocalFileSystem.$$$reportNull$$$0(LocalFileSystem.java)
	at com.intellij.openapi.vfs.LocalFileSystem.getInstance(LocalFileSystem.java:37)
	at org.jetbrains.qodana.staticAnalysis.inspections.runner.startup.QodanaProjectLoader$doOpen$vfsProject$1.invokeSuspend(QodanaProjectLoader.kt:58)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
	at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
2024-07-10 13:02:54,162 [   2589] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:02:54,163 [   2590] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:02:54,163 [   2590] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - OS: Linux
2024-07-10 13:02:54,164 [   2591] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Last Action: 
java.lang.IllegalStateException: @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
	at com.intellij.openapi.vfs.LocalFileSystem.$$$reportNull$$$0(LocalFileSystem.java)
	at com.intellij.openapi.vfs.LocalFileSystem.getInstance(LocalFileSystem.java:37)
	at org.jetbrains.qodana.staticAnalysis.inspections.runner.startup.QodanaProjectLoader$doOpen$vfsProject$1.invokeSuspend(QodanaProjectLoader.kt:58)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
	at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)

"
82,flashvayne/chatgpt-spring-boot-starter,flashvayne,chatgpt-spring-boot-starter,"✓  Linked qodana.cloud project: agents-eval
By using this Docker image, you agree to
- JetBrains Privacy Policy (https://jb.gg/jetbrains-privacy-policy)
- Qodana Linters Agreement (https://www.jetbrains.com/legal/docs/agreements/qodana/license/)
Licensed to JetBrains Team
Subscription is active until June 30, 2025.
Qodana license plan: Ultimate Plus
                                        
          _              _       
         /\ \           /\ \        Qodana for JVM 2024.1
        /  \ \         /  \ \       Documentation
       / /\ \ \       / /\ \ \      https://jb.gg/qodana-docs
      / / /\ \ \     / / /\ \ \     Contact us at
     / / /  \ \_\   / / /  \ \_\    qodana-support@jetbrains.com
    / / / _ / / /  / / /   / / /    Or via our issue tracker
   / / / /\ \/ /  / / /   / / /     https://jb.gg/qodana-issue
  / / /__\ \ \/  / / /___/ / /      Or share your feedback at our forum
 / / /____\ \ \ / / /____\/ /       https://jb.gg/qodana-forum
 \/________\_\/ \/_________/     
                                                   
                                        
Starting up Qodana for JVM 2024.1 (build QDJVM-241.17569.155)…done.
Preparing for the Project opening stage ...
The Project opening stage completed in 1s
✗  Qodana exited with code 1

!  Check ./logs/ in the results directory for more information
",,,,,False,"2024-07-10 13:02:57,965 [   2459] SEVERE - #c.i.o.u.KeyedExtensionCollector - VFS can't be initialized (3 attempts failed) [Plugin: com.intellij]
com.intellij.diagnostic.PluginException: VFS can't be initialized (3 attempts failed) [Plugin: com.intellij]
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:53)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance(ServiceInstanceInitializer.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invokeSuspend(LazyInstanceHolder.kt:162)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invokeSuspend(LazyInstanceHolder.kt:160)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startCoroutineUndispatched(Undispatched.kt:44)
	at kotlinx.coroutines.CoroutineStart.invoke(CoroutineStart.kt:112)
	at kotlinx.coroutines.AbstractCoroutine.start(AbstractCoroutine.kt:126)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.launch(Builders.common.kt:56)
	at kotlinx.coroutines.BuildersKt.launch(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.initialize(LazyInstanceHolder.kt:145)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.access$initialize(LazyInstanceHolder.kt:13)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.tryInitialize(LazyInstanceHolder.kt:135)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt:95)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance$suspendImpl(LazyInstanceHolder.kt:83)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.InstanceContainerImpl.instance(InstanceContainerImpl.kt:68)
	at com.intellij.serviceContainer.ComponentManagerImpl.getServiceAsync(ComponentManagerImpl.kt:702)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invokeSuspend(appServicePreloading.kt:180)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span(tracer.kt:56)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span$default(tracer.kt:49)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1.invokeSuspend(appServicePreloading.kt:41)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
Caused by: java.lang.RuntimeException: VFS can't be initialized (3 attempts failed)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:105)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.connect(PersistentFSConnector.java:61)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecordsImpl.connect(FSRecordsImpl.java:286)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:119)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:99)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.doConnect(PersistentFSImpl.java:223)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.connect(PersistentFSImpl.java:184)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.<init>(PersistentFSImpl.java:160)
	at java.base/java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:732)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:49)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:42)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:308)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:42)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:31)
	... 38 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
2024-07-10 13:02:57,975 [   2469] SEVERE - #c.i.o.u.KeyedExtensionCollector - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:02:57,975 [   2469] SEVERE - #c.i.o.u.KeyedExtensionCollector - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:02:57,976 [   2470] SEVERE - #c.i.o.u.KeyedExtensionCollector - OS: Linux
2024-07-10 13:02:57,977 [   2471] SEVERE - #c.i.o.u.KeyedExtensionCollector - Last Action: 
2024-07-10 13:02:57,989 [   2483] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
java.lang.IllegalStateException: @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
	at com.intellij.openapi.vfs.LocalFileSystem.$$$reportNull$$$0(LocalFileSystem.java)
	at com.intellij.openapi.vfs.LocalFileSystem.getInstance(LocalFileSystem.java:37)
	at org.jetbrains.qodana.staticAnalysis.inspections.runner.startup.QodanaProjectLoader$doOpen$vfsProject$1.invokeSuspend(QodanaProjectLoader.kt:58)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
	at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
2024-07-10 13:02:57,989 [   2483] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:02:57,989 [   2483] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:02:57,990 [   2484] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - OS: Linux
2024-07-10 13:02:57,990 [   2484] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Last Action: 
java.lang.IllegalStateException: @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
	at com.intellij.openapi.vfs.LocalFileSystem.$$$reportNull$$$0(LocalFileSystem.java)
	at com.intellij.openapi.vfs.LocalFileSystem.getInstance(LocalFileSystem.java:37)
	at org.jetbrains.qodana.staticAnalysis.inspections.runner.startup.QodanaProjectLoader$doOpen$vfsProject$1.invokeSuspend(QodanaProjectLoader.kt:58)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
	at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)

"
136,jonashackt/spring-reactive-redis-messaging,jonashackt,spring-reactive-redis-messaging,"✓  Linked qodana.cloud project: agents-eval
By using this Docker image, you agree to
- JetBrains Privacy Policy (https://jb.gg/jetbrains-privacy-policy)
- Qodana Linters Agreement (https://www.jetbrains.com/legal/docs/agreements/qodana/license/)
Licensed to JetBrains Team
Subscription is active until June 30, 2025.
Qodana license plan: Ultimate Plus
                                        
          _              _       
         /\ \           /\ \        Qodana for JVM 2024.1
        /  \ \         /  \ \       Documentation
       / /\ \ \       / /\ \ \      https://jb.gg/qodana-docs
      / / /\ \ \     / / /\ \ \     Contact us at
     / / /  \ \_\   / / /  \ \_\    qodana-support@jetbrains.com
    / / / _ / / /  / / /   / / /    Or via our issue tracker
   / / / /\ \/ /  / / /   / / /     https://jb.gg/qodana-issue
  / / /__\ \ \/  / / /___/ / /      Or share your feedback at our forum
 / / /____\ \ \ / / /____\/ /       https://jb.gg/qodana-forum
 \/________\_\/ \/_________/     
                                                   
                                        
Starting up Qodana for JVM 2024.1 (build QDJVM-241.17569.155)…done.
Preparing for the Project opening stage ...
The Project opening stage completed in 1s
✗  Qodana exited with code 1

!  Check ./logs/ in the results directory for more information
",,,,,False,"2024-07-10 13:03:02,032 [   2636] SEVERE - #c.i.o.u.KeyedExtensionCollector - VFS can't be initialized (3 attempts failed) [Plugin: com.intellij]
com.intellij.diagnostic.PluginException: VFS can't be initialized (3 attempts failed) [Plugin: com.intellij]
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:53)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance(ServiceInstanceInitializer.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invokeSuspend(LazyInstanceHolder.kt:162)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invokeSuspend(LazyInstanceHolder.kt:160)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startCoroutineUndispatched(Undispatched.kt:44)
	at kotlinx.coroutines.CoroutineStart.invoke(CoroutineStart.kt:112)
	at kotlinx.coroutines.AbstractCoroutine.start(AbstractCoroutine.kt:126)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.launch(Builders.common.kt:56)
	at kotlinx.coroutines.BuildersKt.launch(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.initialize(LazyInstanceHolder.kt:145)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.access$initialize(LazyInstanceHolder.kt:13)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.tryInitialize(LazyInstanceHolder.kt:135)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt:95)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance$suspendImpl(LazyInstanceHolder.kt:83)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.InstanceContainerImpl.instance(InstanceContainerImpl.kt:68)
	at com.intellij.serviceContainer.ComponentManagerImpl.getServiceAsync(ComponentManagerImpl.kt:702)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invokeSuspend(appServicePreloading.kt:180)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span(tracer.kt:56)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span$default(tracer.kt:49)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1.invokeSuspend(appServicePreloading.kt:41)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
Caused by: java.lang.RuntimeException: VFS can't be initialized (3 attempts failed)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:105)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.connect(PersistentFSConnector.java:61)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecordsImpl.connect(FSRecordsImpl.java:286)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:119)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:99)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.doConnect(PersistentFSImpl.java:223)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.connect(PersistentFSImpl.java:184)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.<init>(PersistentFSImpl.java:160)
	at java.base/java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:732)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:49)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:42)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:308)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:42)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:31)
	... 38 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
2024-07-10 13:03:02,043 [   2647] SEVERE - #c.i.o.u.KeyedExtensionCollector - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:03:02,044 [   2648] SEVERE - #c.i.o.u.KeyedExtensionCollector - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:03:02,044 [   2648] SEVERE - #c.i.o.u.KeyedExtensionCollector - OS: Linux
2024-07-10 13:03:02,045 [   2649] SEVERE - #c.i.o.u.KeyedExtensionCollector - Last Action: 
2024-07-10 13:03:02,057 [   2661] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
java.lang.IllegalStateException: @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
	at com.intellij.openapi.vfs.LocalFileSystem.$$$reportNull$$$0(LocalFileSystem.java)
	at com.intellij.openapi.vfs.LocalFileSystem.getInstance(LocalFileSystem.java:37)
	at org.jetbrains.qodana.staticAnalysis.inspections.runner.startup.QodanaProjectLoader$doOpen$vfsProject$1.invokeSuspend(QodanaProjectLoader.kt:58)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
	at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
2024-07-10 13:03:02,058 [   2662] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:03:02,058 [   2662] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:03:02,058 [   2662] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - OS: Linux
2024-07-10 13:03:02,059 [   2663] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Last Action: 
java.lang.IllegalStateException: @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
	at com.intellij.openapi.vfs.LocalFileSystem.$$$reportNull$$$0(LocalFileSystem.java)
	at com.intellij.openapi.vfs.LocalFileSystem.getInstance(LocalFileSystem.java:37)
	at org.jetbrains.qodana.staticAnalysis.inspections.runner.startup.QodanaProjectLoader$doOpen$vfsProject$1.invokeSuspend(QodanaProjectLoader.kt:58)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
	at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)

"
176,melix/gradle-tapi-demo-artifacts,melix,gradle-tapi-demo-artifacts,"✓  Linked qodana.cloud project: agents-eval
By using this Docker image, you agree to
- JetBrains Privacy Policy (https://jb.gg/jetbrains-privacy-policy)
- Qodana Linters Agreement (https://www.jetbrains.com/legal/docs/agreements/qodana/license/)
Licensed to JetBrains Team
Subscription is active until June 30, 2025.
Qodana license plan: Ultimate Plus
                                        
          _              _       
         /\ \           /\ \        Qodana for JVM 2024.1
        /  \ \         /  \ \       Documentation
       / /\ \ \       / /\ \ \      https://jb.gg/qodana-docs
      / / /\ \ \     / / /\ \ \     Contact us at
     / / /  \ \_\   / / /  \ \_\    qodana-support@jetbrains.com
    / / / _ / / /  / / /   / / /    Or via our issue tracker
   / / / /\ \/ /  / / /   / / /     https://jb.gg/qodana-issue
  / / /__\ \ \/  / / /___/ / /      Or share your feedback at our forum
 / / /____\ \ \ / / /____\/ /       https://jb.gg/qodana-forum
 \/________\_\/ \/_________/     
                                                   
                                        
Starting up Qodana for JVM 2024.1 (build QDJVM-241.17569.155)…done.
Preparing for the Project opening stage ...
The Project opening stage completed in 1s
✗  Qodana exited with code 1

!  Check ./logs/ in the results directory for more information
",,,,,False,"2024-07-10 13:03:04,670 [   1173] SEVERE - #c.i.i.s.e.v.s.p.EventLogMetadataPersistence - /root/.config/idea/event-log-metadata/mp: No space left on device
java.nio.file.FileSystemException: /root/.config/idea/event-log-metadata/mp: No space left on device
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:100)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:106)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixFileSystemProvider.createDirectory(UnixFileSystemProvider.java:397)
	at java.base/java.nio.file.Files.createDirectory(Files.java:700)
	at java.base/java.nio.file.Files.createAndCheckIsDirectory(Files.java:807)
	at java.base/java.nio.file.Files.createDirectories(Files.java:793)
	at com.intellij.internal.statistic.eventLog.validator.storage.persistence.EventLogMetadataPersistence.initBuiltinMetadata(EventLogMetadataPersistence.java:73)
	at com.intellij.internal.statistic.eventLog.validator.storage.persistence.EventLogMetadataPersistence.getEventsSchemeFile(EventLogMetadataPersistence.java:49)
	at com.intellij.internal.statistic.eventLog.validator.storage.persistence.EventLogMetadataPersistence.getCachedEventsScheme(EventLogMetadataPersistence.java:30)
	at com.intellij.internal.statistic.eventLog.validator.storage.ValidationRulesPersistedStorage.loadValidatorsFromLocalCache(ValidationRulesPersistedStorage.java:64)
	at com.intellij.internal.statistic.eventLog.validator.storage.ValidationRulesPersistedStorage.<init>(ValidationRulesPersistedStorage.java:43)
	at com.intellij.internal.statistic.eventLog.validator.storage.ValidationRulesStorageProvider.newStorage(ValidationRulesStorageProvider.java:11)
	at com.intellij.internal.statistic.eventLog.validator.IntellijSensitiveDataValidator.lambda$getInstance$0(IntellijSensitiveDataValidator.java:111)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at com.intellij.internal.statistic.eventLog.validator.IntellijSensitiveDataValidator.getInstance(IntellijSensitiveDataValidator.java:108)
	at com.intellij.internal.statistic.updater.StatisticsJobsSchedulerKt$updateValidationRules$2.invoke(StatisticsJobsScheduler.kt:122)
	at com.intellij.internal.statistic.updater.StatisticsJobsSchedulerKt$updateValidationRules$2.invoke(StatisticsJobsScheduler.kt:121)
	at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
	at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
	at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
	at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
	at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
	at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
	at com.intellij.internal.statistic.updater.StatisticsJobsSchedulerKt.updateValidationRules(StatisticsJobsScheduler.kt:121)
	at com.intellij.internal.statistic.updater.StatisticsJobsSchedulerKt.runValidationRulesUpdate(StatisticsJobsScheduler.kt:110)
	at com.intellij.internal.statistic.updater.StatisticsJobsSchedulerKt.access$runValidationRulesUpdate(StatisticsJobsScheduler.kt:1)
	at com.intellij.internal.statistic.updater.StatisticsJobsScheduler$execute$2$4.invokeSuspend(StatisticsJobsScheduler.kt:50)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
2024-07-10 13:03:04,681 [   1184] SEVERE - #c.i.i.s.e.v.s.p.EventLogMetadataPersistence - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:03:04,688 [   1191] SEVERE - #c.i.i.s.e.v.s.p.EventLogMetadataPersistence - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:03:04,691 [   1194] SEVERE - #c.i.i.s.e.v.s.p.EventLogMetadataPersistence - OS: Linux
2024-07-10 13:03:04,695 [   1198] SEVERE - #c.i.i.s.e.v.s.p.EventLogMetadataPersistence - Last Action: 
2024-07-10 13:03:06,261 [   2764] SEVERE - #c.i.o.u.KeyedExtensionCollector - VFS can't be initialized (3 attempts failed) [Plugin: com.intellij]
com.intellij.diagnostic.PluginException: VFS can't be initialized (3 attempts failed) [Plugin: com.intellij]
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:53)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance(ServiceInstanceInitializer.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invokeSuspend(LazyInstanceHolder.kt:162)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invokeSuspend(LazyInstanceHolder.kt:160)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startCoroutineUndispatched(Undispatched.kt:44)
	at kotlinx.coroutines.CoroutineStart.invoke(CoroutineStart.kt:112)
	at kotlinx.coroutines.AbstractCoroutine.start(AbstractCoroutine.kt:126)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.launch(Builders.common.kt:56)
	at kotlinx.coroutines.BuildersKt.launch(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.initialize(LazyInstanceHolder.kt:145)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.access$initialize(LazyInstanceHolder.kt:13)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.tryInitialize(LazyInstanceHolder.kt:135)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt:95)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance$suspendImpl(LazyInstanceHolder.kt:83)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.InstanceContainerImpl.instance(InstanceContainerImpl.kt:68)
	at com.intellij.serviceContainer.ComponentManagerImpl.getServiceAsync(ComponentManagerImpl.kt:702)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invokeSuspend(appServicePreloading.kt:180)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span(tracer.kt:56)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span$default(tracer.kt:49)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1.invokeSuspend(appServicePreloading.kt:41)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
Caused by: java.lang.RuntimeException: VFS can't be initialized (3 attempts failed)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:105)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.connect(PersistentFSConnector.java:61)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecordsImpl.connect(FSRecordsImpl.java:286)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:119)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:99)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.doConnect(PersistentFSImpl.java:223)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.connect(PersistentFSImpl.java:184)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.<init>(PersistentFSImpl.java:160)
	at java.base/java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:732)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:49)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:42)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:308)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:42)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:31)
	... 38 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
2024-07-10 13:03:06,267 [   2770] SEVERE - #c.i.o.u.KeyedExtensionCollector - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:03:06,267 [   2770] SEVERE - #c.i.o.u.KeyedExtensionCollector - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:03:06,268 [   2771] SEVERE - #c.i.o.u.KeyedExtensionCollector - OS: Linux
2024-07-10 13:03:06,268 [   2771] SEVERE - #c.i.o.u.KeyedExtensionCollector - Last Action: 
2024-07-10 13:03:06,277 [   2780] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
java.lang.IllegalStateException: @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
	at com.intellij.openapi.vfs.LocalFileSystem.$$$reportNull$$$0(LocalFileSystem.java)
	at com.intellij.openapi.vfs.LocalFileSystem.getInstance(LocalFileSystem.java:37)
	at org.jetbrains.qodana.staticAnalysis.inspections.runner.startup.QodanaProjectLoader$doOpen$vfsProject$1.invokeSuspend(QodanaProjectLoader.kt:58)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
	at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
2024-07-10 13:03:06,277 [   2780] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:03:06,278 [   2781] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:03:06,278 [   2781] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - OS: Linux
2024-07-10 13:03:06,278 [   2781] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Last Action: 
java.lang.IllegalStateException: @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
	at com.intellij.openapi.vfs.LocalFileSystem.$$$reportNull$$$0(LocalFileSystem.java)
	at com.intellij.openapi.vfs.LocalFileSystem.getInstance(LocalFileSystem.java:37)
	at org.jetbrains.qodana.staticAnalysis.inspections.runner.startup.QodanaProjectLoader$doOpen$vfsProject$1.invokeSuspend(QodanaProjectLoader.kt:58)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
	at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)

"
246,slack-samples/bolt-java-starter-template,slack-samples,bolt-java-starter-template,"✓  Linked qodana.cloud project: agents-eval
By using this Docker image, you agree to
- JetBrains Privacy Policy (https://jb.gg/jetbrains-privacy-policy)
- Qodana Linters Agreement (https://www.jetbrains.com/legal/docs/agreements/qodana/license/)
Licensed to JetBrains Team
Subscription is active until June 30, 2025.
Qodana license plan: Ultimate Plus
                                        
          _              _       
         /\ \           /\ \        Qodana for JVM 2024.1
        /  \ \         /  \ \       Documentation
       / /\ \ \       / /\ \ \      https://jb.gg/qodana-docs
      / / /\ \ \     / / /\ \ \     Contact us at
     / / /  \ \_\   / / /  \ \_\    qodana-support@jetbrains.com
    / / / _ / / /  / / /   / / /    Or via our issue tracker
   / / / /\ \/ /  / / /   / / /     https://jb.gg/qodana-issue
  / / /__\ \ \/  / / /___/ / /      Or share your feedback at our forum
 / / /____\ \ \ / / /____\/ /       https://jb.gg/qodana-forum
 \/________\_\/ \/_________/     
                                                   
                                        
Starting up Qodana for JVM 2024.1 (build QDJVM-241.17569.155)…done.
Preparing for the Project opening stage ...
The Project opening stage completed in 943ms
✗  Qodana exited with code 1

!  Check ./logs/ in the results directory for more information
",,,,,False,"2024-07-10 13:03:09,931 [   2215] SEVERE - #c.i.o.u.KeyedExtensionCollector - VFS can't be initialized (3 attempts failed) [Plugin: com.intellij]
com.intellij.diagnostic.PluginException: VFS can't be initialized (3 attempts failed) [Plugin: com.intellij]
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:53)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance(ServiceInstanceInitializer.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invokeSuspend(LazyInstanceHolder.kt:162)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invokeSuspend(LazyInstanceHolder.kt:160)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startCoroutineUndispatched(Undispatched.kt:44)
	at kotlinx.coroutines.CoroutineStart.invoke(CoroutineStart.kt:112)
	at kotlinx.coroutines.AbstractCoroutine.start(AbstractCoroutine.kt:126)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.launch(Builders.common.kt:56)
	at kotlinx.coroutines.BuildersKt.launch(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.initialize(LazyInstanceHolder.kt:145)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.access$initialize(LazyInstanceHolder.kt:13)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.tryInitialize(LazyInstanceHolder.kt:135)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt:95)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance$suspendImpl(LazyInstanceHolder.kt:83)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.InstanceContainerImpl.instance(InstanceContainerImpl.kt:68)
	at com.intellij.serviceContainer.ComponentManagerImpl.getServiceAsync(ComponentManagerImpl.kt:702)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invokeSuspend(appServicePreloading.kt:180)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span(tracer.kt:56)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span$default(tracer.kt:49)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1.invokeSuspend(appServicePreloading.kt:41)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
Caused by: java.lang.RuntimeException: VFS can't be initialized (3 attempts failed)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:105)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.connect(PersistentFSConnector.java:61)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecordsImpl.connect(FSRecordsImpl.java:286)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:119)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:99)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.doConnect(PersistentFSImpl.java:223)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.connect(PersistentFSImpl.java:184)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.<init>(PersistentFSImpl.java:160)
	at java.base/java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:732)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:49)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:42)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:308)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:42)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:31)
	... 38 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
2024-07-10 13:03:09,940 [   2224] SEVERE - #c.i.o.u.KeyedExtensionCollector - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:03:09,940 [   2224] SEVERE - #c.i.o.u.KeyedExtensionCollector - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:03:09,941 [   2225] SEVERE - #c.i.o.u.KeyedExtensionCollector - OS: Linux
2024-07-10 13:03:09,941 [   2225] SEVERE - #c.i.o.u.KeyedExtensionCollector - Last Action: 
2024-07-10 13:03:09,953 [   2237] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
java.lang.IllegalStateException: @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
	at com.intellij.openapi.vfs.LocalFileSystem.$$$reportNull$$$0(LocalFileSystem.java)
	at com.intellij.openapi.vfs.LocalFileSystem.getInstance(LocalFileSystem.java:37)
	at org.jetbrains.qodana.staticAnalysis.inspections.runner.startup.QodanaProjectLoader$doOpen$vfsProject$1.invokeSuspend(QodanaProjectLoader.kt:58)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
	at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
2024-07-10 13:03:09,954 [   2238] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:03:09,954 [   2238] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:03:09,954 [   2238] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - OS: Linux
2024-07-10 13:03:09,955 [   2239] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Last Action: 
java.lang.IllegalStateException: @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
	at com.intellij.openapi.vfs.LocalFileSystem.$$$reportNull$$$0(LocalFileSystem.java)
	at com.intellij.openapi.vfs.LocalFileSystem.getInstance(LocalFileSystem.java:37)
	at org.jetbrains.qodana.staticAnalysis.inspections.runner.startup.QodanaProjectLoader$doOpen$vfsProject$1.invokeSuspend(QodanaProjectLoader.kt:58)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
	at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)

"
63,datumbox/datumbox-framework-examples,datumbox,datumbox-framework-examples,"✓  Linked qodana.cloud project: agents-eval
By using this Docker image, you agree to
- JetBrains Privacy Policy (https://jb.gg/jetbrains-privacy-policy)
- Qodana Linters Agreement (https://www.jetbrains.com/legal/docs/agreements/qodana/license/)
Licensed to JetBrains Team
Subscription is active until June 30, 2025.
Qodana license plan: Ultimate Plus
                                        
          _              _       
         /\ \           /\ \        Qodana for JVM 2024.1
        /  \ \         /  \ \       Documentation
       / /\ \ \       / /\ \ \      https://jb.gg/qodana-docs
      / / /\ \ \     / / /\ \ \     Contact us at
     / / /  \ \_\   / / /  \ \_\    qodana-support@jetbrains.com
    / / / _ / / /  / / /   / / /    Or via our issue tracker
   / / / /\ \/ /  / / /   / / /     https://jb.gg/qodana-issue
  / / /__\ \ \/  / / /___/ / /      Or share your feedback at our forum
 / / /____\ \ \ / / /____\/ /       https://jb.gg/qodana-forum
 \/________\_\/ \/_________/     
                                                   
                                        
Starting up Qodana for JVM 2024.1 (build QDJVM-241.17569.155)…done.
Preparing for the Project opening stage ...
The Project opening stage completed in 1s
✗  Qodana exited with code 1

!  Check ./logs/ in the results directory for more information
",,,,,False,"2024-07-10 13:03:13,793 [   2419] SEVERE - #c.i.o.u.KeyedExtensionCollector - VFS can't be initialized (3 attempts failed) [Plugin: com.intellij]
com.intellij.diagnostic.PluginException: VFS can't be initialized (3 attempts failed) [Plugin: com.intellij]
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:53)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance(ServiceInstanceInitializer.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invokeSuspend(LazyInstanceHolder.kt:162)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invokeSuspend(LazyInstanceHolder.kt:160)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder$initialize$1.invoke(LazyInstanceHolder.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startCoroutineUndispatched(Undispatched.kt:44)
	at kotlinx.coroutines.CoroutineStart.invoke(CoroutineStart.kt:112)
	at kotlinx.coroutines.AbstractCoroutine.start(AbstractCoroutine.kt:126)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.launch(Builders.common.kt:56)
	at kotlinx.coroutines.BuildersKt.launch(Unknown Source)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.initialize(LazyInstanceHolder.kt:145)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.access$initialize(LazyInstanceHolder.kt:13)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.tryInitialize(LazyInstanceHolder.kt:135)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt:95)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance$suspendImpl(LazyInstanceHolder.kt:83)
	at com.intellij.platform.instanceContainer.internal.LazyInstanceHolder.getInstance(LazyInstanceHolder.kt)
	at com.intellij.platform.instanceContainer.internal.InstanceContainerImpl.instance(InstanceContainerImpl.kt:68)
	at com.intellij.serviceContainer.ComponentManagerImpl.getServiceAsync(ComponentManagerImpl.kt:702)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invokeSuspend(appServicePreloading.kt:180)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1$1.invoke(appServicePreloading.kt)
	at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
	at kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)
	at kotlinx.coroutines.BuildersKt.withContext(Unknown Source)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span(tracer.kt:56)
	at com.intellij.platform.diagnostic.telemetry.impl.TracerKt.span$default(tracer.kt:49)
	at com.intellij.platform.ide.bootstrap.AppServicePreloadingKt$preloadCriticalServices$managingFsJob$1.invokeSuspend(appServicePreloading.kt:41)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
Caused by: java.lang.RuntimeException: VFS can't be initialized (3 attempts failed)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:105)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.connect(PersistentFSConnector.java:61)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecordsImpl.connect(FSRecordsImpl.java:286)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:119)
	at com.intellij.openapi.vfs.newvfs.persistent.FSRecords.connect(FSRecords.java:99)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.doConnect(PersistentFSImpl.java:223)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.connect(PersistentFSImpl.java:184)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.<init>(PersistentFSImpl.java:160)
	at java.base/java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:732)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:49)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt$instantiate$2.invoke(instantiate.kt:42)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:308)
	at com.intellij.platform.instanceContainer.instantiation.InstantiateKt.instantiate(instantiate.kt:42)
	at com.intellij.serviceContainer.ServiceInstanceInitializer.createInstance$suspendImpl(ServiceInstanceInitializer.kt:31)
	... 38 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.IOUtil.allocateFileRegion(IOUtil.java:386)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:492)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
	Suppressed: [UNRECOGNIZED]: VFS init failure of unrecognized category: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:285)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.init(PersistentFSConnector.java:79)
		... 51 more
	Caused by: java.io.IOException: java.io.IOException: No space left on device
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$static$3(PersistentFSLoader.java:95)
		at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:228)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.initializeStorages(PersistentFSLoader.java:231)
		at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSConnector.tryInit(PersistentFSConnector.java:182)
		... 52 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$12(PersistentFSLoader.java:240)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsLockFreeOverMMappedFile.<init>(PersistentFSRecordsLockFreeOverMMappedFile.java:118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:83)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory$createStorage$1.invoke(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage$lambda$0(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSRecordsStorageFactory.createStorage(PersistentFSRecordsStorageFactory.kt:82)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createRecordsStorage(PersistentFSLoader.java:772)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$7(PersistentFSLoader.java:197)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
		Suppressed: java.util.concurrent.CompletionException: java.io.IOException: No space left on device
			at java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:413)
			at java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2118)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$15(PersistentFSLoader.java:249)
			at com.intellij.util.ExceptionUtil.runAllAndRethrowAllExceptions(ExceptionUtil.java:217)
			... 54 more
		Caused by: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.FileDispatcherImpl.pwrite(FileDispatcherImpl.java:68)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:130)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:97)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:67)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:878)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:864)
			at com.intellij.util.io.IOUtil.fillFileRegionWithZeros(IOUtil.java:402)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.ensureFileRegionAllocatedAndZeroed(MMappedFileStorage.java:488)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.map(MMappedFileStorage.java:466)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:453)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage$Page.<init>(MMappedFileStorage.java:439)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndexLocked(MMappedFileStorage.java:422)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByIndex(MMappedFileStorage.java:243)
			at com.intellij.util.io.dev.mmapped.MMappedFileStorage.pageByOffset(MMappedFileStorage.java:228)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogOverMMappedFile.<init>(AppendOnlyLogOverMMappedFile.java:368)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.lambda$open$0(AppendOnlyLogFactory.java:176)
			at com.intellij.util.io.dev.StorageFactory.lambda$wrapStorageSafely$0(StorageFactory.java:32)
			at com.intellij.util.io.IOUtil.wrapSafely(IOUtil.java:511)
			at com.intellij.util.io.dev.StorageFactory.wrapStorageSafely(StorageFactory.java:30)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.appendonlylog.AppendOnlyLogFactory.open(AppendOnlyLogFactory.java:173)
			at com.intellij.openapi.vfs.newvfs.persistent.dev.content.VFSContentStorageOverMMappedFile.<init>(VFSContentStorageOverMMappedFile.java:98)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage_makeStorage(PersistentFSLoader.java:721)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.createContentStorage(PersistentFSLoader.java:691)
			at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSLoader.lambda$initializeStorages$6(PersistentFSLoader.java:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1$1.invoke(PersistentFsConnectorHelper.kt:38)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContextInner(coroutines.kt:320)
			at com.intellij.openapi.progress.CoroutinesKt.access$blockingContextInner(coroutines.kt:1)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invokeSuspend(coroutines.kt:197)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at com.intellij.openapi.progress.CoroutinesKt$blockingContext$2.invoke(coroutines.kt)
			at kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)
			at kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)
			at com.intellij.openapi.progress.CoroutinesKt.blockingContext(coroutines.kt:196)
			at com.intellij.openapi.vfs.newvfs.persistent.ExecuteOnCoroutine$async$1.invokeSuspend(PersistentFsConnectorHelper.kt:37)
			at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
			at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
			at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
			at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
			... 4 more
2024-07-10 13:03:13,800 [   2426] SEVERE - #c.i.o.u.KeyedExtensionCollector - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:03:13,800 [   2426] SEVERE - #c.i.o.u.KeyedExtensionCollector - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:03:13,801 [   2427] SEVERE - #c.i.o.u.KeyedExtensionCollector - OS: Linux
2024-07-10 13:03:13,801 [   2427] SEVERE - #c.i.o.u.KeyedExtensionCollector - Last Action: 
2024-07-10 13:03:13,813 [   2439] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
java.lang.IllegalStateException: @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
	at com.intellij.openapi.vfs.LocalFileSystem.$$$reportNull$$$0(LocalFileSystem.java)
	at com.intellij.openapi.vfs.LocalFileSystem.getInstance(LocalFileSystem.java:37)
	at org.jetbrains.qodana.staticAnalysis.inspections.runner.startup.QodanaProjectLoader$doOpen$vfsProject$1.invokeSuspend(QodanaProjectLoader.kt:58)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
	at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
2024-07-10 13:03:13,814 [   2440] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Qodana for JVM 2024.1  Build #QDJVM-241.17569.155
2024-07-10 13:03:13,814 [   2440] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - JDK: 17.0.11; VM: OpenJDK 64-Bit Server VM; Vendor: JetBrains s.r.o.
2024-07-10 13:03:13,815 [   2441] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - OS: Linux
2024-07-10 13:03:13,815 [   2441] SEVERE - #o.j.q.s.i.r.QodanaInspectionApplication - Last Action: 
java.lang.IllegalStateException: @NotNull method com/intellij/openapi/vfs/LocalFileSystem.getInstance must not return null
	at com.intellij.openapi.vfs.LocalFileSystem.$$$reportNull$$$0(LocalFileSystem.java)
	at com.intellij.openapi.vfs.LocalFileSystem.getInstance(LocalFileSystem.java:37)
	at org.jetbrains.qodana.staticAnalysis.inspections.runner.startup.QodanaProjectLoader$doOpen$vfsProject$1.invokeSuspend(QodanaProjectLoader.kt:58)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
	at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
	at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)

"

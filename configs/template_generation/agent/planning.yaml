_target_: src.eval.agents.openai_langchain_agent.OpenAILangchainAgent
name: planning
model_name: gpt-3.5-turbo-1106
temperature: 0
model_kwargs:
  seed: 76097149
prompt:
  _target_: src.eval.prompts.planning_prompt.PlanningPrompt
  model_name: gpt-3.5-turbo-1106
  temperature: 0
  model_kwargs:
    seed: 76097149
  planning_system_prompt: |
    We are developing a benchmark to assess the quality of project template generation by code agents. 
    The benchmark includes the task of generating project template code based on a description provided in natural language. 
    We will use template repositories in Python, Java, and Kotlin from GitHub as the source of data for this task.
    The task is to use the given file system API to reproduce a given template based on its textual description. 
    Template is a small compilable project that contains small examples of all mentioned in description libraries, technologies, functionality.
    The result template should contain the whole file structure of this project, including the code inside files and configuration files for project building and deployment if required.
    The code should be compilable and contain a minimal example of the required functionality as specified in the description. 
    The file system API provides functionality to explore, create, delete, and modify files and directories in the working directory.

    Now, you should provide a detailed step-by-step action plan for handling the task at hand, clearly emphasizing the sequential order of operations. 
    Your plan should:
    - Specify the task's end goal and break down the process into individual actions, using bullet points for clarity.
    - Abstractly describe the logical and conditional flow between actions.
    - Do not execute any functions or write any code. This is a planning-only phase, intended to create a blueprint for the execution phase.
  execution_system_prompt: |
    We are developing a benchmark to assess the quality of project template generation by code agents. 
    The benchmark includes the task of generating project template code based on a description provided in natural language. 
    We will use template repositories in Python, Java, and Kotlin from GitHub as the source of data for this task.
    Your task is to use the given file system API to reproduce a given template based on its textual description. 
    You should create the file structure of this project, including the code inside files and configuration files for project building and deployment if required.
    The code should be compilable and contain a minimal example of the required functionality as specified in the description. 
    The file system API provides functionality to explore, create, delete, and modify files and directories in the working directory.
    
    As a support, you also provided with a plan, which you should follow during the task. For each step of the plan you should:
    - Call the appropriate function with the required arguments, corresponding directly to the outlined plan's next action.
    - Evaluate the function call's result and adjust the next steps accordingly, maintaining fidelity to the plan's intended sequence.
    - If a function call fails or produces undesired outcomes, stop execution process.
    - Persist through different strategies, avoiding repetition of unsuccessful attempts, until the task is completed or a maximum of 50 steps have been taken.
    - If you are stuck, do not try to repeat the request, as it will not help. Instead, try to explore the reason for the failure, modify the input or rollback some previous actions which led to the error.
    - Document solely the function calls and their outcomes. Refrain from additional commentary or explanatory text during this execution phase.
    Begin execution with the plan start point, adhering strictly to the prescribed operations. 
    The projectâ€™s working directory has already been set up. Use it as the root directory by starting your paths with an empty string ''.
